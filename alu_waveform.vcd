$date
	Fri Oct 24 01:20:07 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_alu_simple $end
$var wire 1 ! cout $end
$var wire 8 " Result [7:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 2 % TT [1:0] $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 8 ( Result [7:0] $end
$var wire 2 ) TT [1:0] $end
$var wire 4 * and_result [3:0] $end
$var wire 4 + b_inverted [3:0] $end
$var wire 1 ! cout $end
$var wire 4 , sub_sum [3:0] $end
$var wire 1 - sub_cout $end
$var wire 8 . mul_result [7:0] $end
$var wire 4 / add_sum [3:0] $end
$var wire 1 0 add_cout $end
$var reg 1 1 cout_reg $end
$var reg 8 2 result_reg [7:0] $end
$scope module adder $end
$var wire 4 3 a [3:0] $end
$var wire 4 4 b [3:0] $end
$var wire 1 5 cin $end
$var wire 4 6 g [3:0] $end
$var wire 4 7 p [3:0] $end
$var wire 4 8 s [3:0] $end
$var wire 4 9 p2 [3:0] $end
$var wire 4 : p1 [3:0] $end
$var wire 4 ; g2 [3:0] $end
$var wire 4 < g1 [3:0] $end
$var wire 1 0 cout $end
$upscope $end
$scope module multiplier $end
$var wire 4 = A [3:0] $end
$var wire 4 > B [3:0] $end
$var wire 4 ? sum [3:0] $end
$var wire 3 @ smm [2:0] $end
$var wire 4 A hcar [3:0] $end
$var wire 3 B crr [2:0] $end
$var wire 4 C caar [3:0] $end
$var wire 8 D Y [7:0] $end
$scope begin pp_rows[0] $end
$var parameter 2 E i $end
$scope begin pp_cols[0] $end
$var parameter 2 F j $end
$upscope $end
$scope begin pp_cols[1] $end
$var parameter 2 G j $end
$upscope $end
$scope begin pp_cols[2] $end
$var parameter 3 H j $end
$upscope $end
$scope begin pp_cols[3] $end
$var parameter 3 I j $end
$upscope $end
$upscope $end
$scope begin pp_rows[1] $end
$var parameter 2 J i $end
$scope begin pp_cols[0] $end
$var parameter 2 K j $end
$upscope $end
$scope begin pp_cols[1] $end
$var parameter 2 L j $end
$upscope $end
$scope begin pp_cols[2] $end
$var parameter 3 M j $end
$upscope $end
$scope begin pp_cols[3] $end
$var parameter 3 N j $end
$upscope $end
$upscope $end
$scope begin pp_rows[2] $end
$var parameter 3 O i $end
$scope begin pp_cols[0] $end
$var parameter 2 P j $end
$upscope $end
$scope begin pp_cols[1] $end
$var parameter 2 Q j $end
$upscope $end
$scope begin pp_cols[2] $end
$var parameter 3 R j $end
$upscope $end
$scope begin pp_cols[3] $end
$var parameter 3 S j $end
$upscope $end
$upscope $end
$scope begin pp_rows[3] $end
$var parameter 3 T i $end
$scope begin pp_cols[0] $end
$var parameter 2 U j $end
$upscope $end
$scope begin pp_cols[1] $end
$var parameter 2 V j $end
$upscope $end
$scope begin pp_cols[2] $end
$var parameter 3 W j $end
$upscope $end
$scope begin pp_cols[3] $end
$var parameter 3 X j $end
$upscope $end
$upscope $end
$scope module ff0 $end
$var wire 1 Y car $end
$var wire 1 Z cout $end
$var wire 1 [ fad $end
$var wire 1 \ p1 $end
$var wire 1 ] q1 $end
$upscope $end
$scope module ff1 $end
$var wire 1 ^ car $end
$var wire 1 _ cout $end
$var wire 1 ` fad $end
$var wire 1 a p1 $end
$var wire 1 b q1 $end
$upscope $end
$scope module ff2 $end
$var wire 1 c car $end
$var wire 1 d cout $end
$var wire 1 e fad $end
$var wire 1 f p1 $end
$var wire 1 g q1 $end
$upscope $end
$scope module ff3 $end
$var wire 1 h car $end
$var wire 1 i cout $end
$var wire 1 j fad $end
$var wire 1 k q1 $end
$var wire 1 l p1 $end
$upscope $end
$scope module fg0 $end
$var wire 1 m car $end
$var wire 1 n cout $end
$var wire 1 o fad $end
$var wire 1 p p1 $end
$var wire 1 q q1 $end
$upscope $end
$scope module fg1 $end
$var wire 1 r car $end
$var wire 1 s cout $end
$var wire 1 t fad $end
$var wire 1 u q1 $end
$var wire 1 v p1 $end
$upscope $end
$scope module fg2 $end
$var wire 1 w cout $end
$var wire 1 x fad $end
$var wire 1 y p1 $end
$var wire 1 z q1 $end
$var wire 1 { car $end
$upscope $end
$scope module fg3 $end
$var wire 1 | cout $end
$var wire 1 } fad $end
$var wire 1 ~ q1 $end
$var wire 1 !" p1 $end
$var wire 1 "" car $end
$upscope $end
$scope module fle0 $end
$var wire 1 #" car $end
$var wire 1 $" cout $end
$var wire 1 %" fad $end
$var wire 1 &" q1 $end
$var wire 1 '" p1 $end
$upscope $end
$scope module fle1 $end
$var wire 1 (" cout $end
$var wire 1 )" fad $end
$var wire 1 *" q1 $end
$var wire 1 +" p1 $end
$var wire 1 ," car $end
$upscope $end
$scope module fle2 $end
$var wire 1 -" cout $end
$var wire 1 ." fad $end
$var wire 1 /" q1 $end
$var wire 1 0" p1 $end
$var wire 1 1" car $end
$upscope $end
$scope module fle3 $end
$var wire 1 2" cout $end
$var wire 1 3" fad $end
$var wire 1 4" q1 $end
$var wire 1 5" p1 $end
$var wire 1 6" car $end
$upscope $end
$upscope $end
$scope module subtractor $end
$var wire 4 7" a [3:0] $end
$var wire 4 8" b [3:0] $end
$var wire 1 9" cin $end
$var wire 4 :" g [3:0] $end
$var wire 4 ;" p [3:0] $end
$var wire 4 <" s [3:0] $end
$var wire 4 =" p2 [3:0] $end
$var wire 4 >" p1 [3:0] $end
$var wire 4 ?" g2 [3:0] $end
$var wire 4 @" g1 [3:0] $end
$var wire 1 - cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 X
b10 W
b1 V
b0 U
b11 T
b11 S
b10 R
b1 Q
b0 P
b10 O
b11 N
b10 M
b1 L
b0 K
b1 J
b11 I
b10 H
b1 G
b0 F
b0 E
$end
#0
$dumpvars
b1101 @"
b1101 ?"
b1 >"
b1 ="
b10 <"
b1001 ;"
b100 :"
19"
b1100 8"
b101 7"
06"
05"
04"
03"
02"
11"
00"
0/"
1."
0-"
1,"
0+"
0*"
1)"
0("
1'"
0&"
1%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
1u
1t
0s
0r
1q
0p
1o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
1\
1[
0Z
0Y
b1111 D
b0 C
b0 B
b0 A
b1 @
b11z ?
b11 >
b101 =
b111 <
b111 ;
b100 :
b0 9
b1000 8
b110 7
b1 6
05
b11 4
b101 3
b1000 2
01
00
b1000 /
b1111 .
1-
b10 ,
b1100 +
b1 *
b0 )
b1000 (
b11 '
b101 &
b0 %
b11 $
b101 #
b1000 "
0!
$end
#10
1j
1h
1d
0c
1!
11
b100 B
0_
10
1g
0[
1w
0e
1b
1`
b1000 ?"
b1100 ;
b110 C
1s
0\
b1000 @"
b11 "
b11 (
b11 2
1y
1f
b11 9
b11 /
b11 8
b1100 <
0t
0%"
0a
b0 ="
b101 ,
b101 <"
b111z ?
13"
1}
b11 :
b100 @
0x
b0 >"
b1000 +
b1000 8"
16"
1""
b100 *
b1011 7
b100 6
b1010100 .
b1010100 D
1v
0'"
1{
b100 ;"
b1000 :"
b111 $
b111 '
b111 4
b111 >
b1100 #
b1100 &
b1100 3
b1100 =
b1100 7"
#20
1c
1_
0`
1^
1Z
1]
1h
1n
0[
1-
1g
b111 B
1d
0o
1w
1e
1\
1p
1t
b1111 ?"
1z
1~
0y
1k
1f
b1111 ;
1$"
1r
b1111 @"
b1110 "
b1110 (
b1110 2
1-"
12"
b11z ?
03"
b1111 C
1|
b101 @
1}
1i
1j
b0 9
b1110 /
b1110 8
b1111 <
b1111 A
1("
b1111 ="
b0 ,
b0 <"
b0 :"
b0 :
b1111 >"
b0 +
b0 8"
10"
15"
1!"
1l
b1111 *
b0 7
b1111 6
b11100001 .
b11100001 D
1&"
1'"
1*"
1+"
1/"
b1111 ;"
b1111 $
b1111 '
b1111 4
b1111 >
b1111 #
b1111 &
b1111 3
b1111 =
b1111 7"
#30
0e
0c
0_
1`
0^
0Z
1[
0h
b0 B
0d
0]
0n
1a
0g
1o
0b
0f
0i
1x
0w
00
0s
b11 @
0}
0p
b1000 ?"
b10 ;
0$"
0r
0~
0z
0k
b1000 @"
0j
b1 9
b1101 /
b1101 8
b10 <
1%"
0u
0("
02"
0y
b0 A
0-"
b0 C
0|
b0 ="
b111 ,
b111 <"
b1000 :"
b1 :
0."
b1z ?
03"
b100 >"
b1100 +
b1100 8"
0/"
0""
05"
0l
b10 *
b1001 7
b10 6
b11110 .
b11110 D
0,"
0'"
01"
0+"
06"
00"
0!"
b110 ;"
b111 "
b111 (
b111 2
b11 $
b11 '
b11 4
b11 >
b1010 #
b1010 &
b1010 3
b1010 =
b1010 7"
b1 %
b1 )
#40
00
0o
0`
1e
b0 ;
0q
b11 "
b11 (
b11 2
0a
1f
b1001 :
b1101 /
b1101 8
b0 <
b101000 .
b101000 D
0%"
b0z ?
0)"
b0 >"
b11 ,
b11 <"
0x
b101 @
1}
b1010 +
b1010 8"
0{
1""
b0 *
b1101 7
b0 6
0&"
0*"
b10 ;"
b101 $
b101 '
b101 4
b101 >
b1000 #
b1000 &
b1000 3
b1000 =
b1000 7"
#50
1`
1[
1a
1!
11
1-
1x
0e
b1111 ?"
b101 ;
1\
1r
b0 "
b0 (
b0 2
b0 9
b1010 /
b1010 8
b101 <
1t
b10 A
1("
1y
0f
b1111 ="
b0 ,
b0 <"
b1111 @"
b0 :
b100z ?
13"
b11 @
0}
b1111 >"
b101 *
b0 7
b101 6
b11001 .
b11001 D
1,"
0v
1+"
16"
0""
b1111 ;"
b0 :"
b101 #
b101 &
b101 3
b101 =
b101 7"
#60
0-
0`
0a
b11 ?"
b111 ;
1o
b1 @
0x
0r
1u
b1 ="
b11 @"
b100 :
b1000 /
b1000 8
b111 <
b1111 .
b1111 D
1%"
b0 A
0("
1q
1."
0y
b1 >"
b1110 ,
b1110 <"
1)"
b11z ?
03"
b1 *
b110 7
b1 6
1&"
0,"
1/"
06"
b1001 ;"
b10 :"
0!
01
b1111 "
b1111 (
b1111 2
b11 #
b11 &
b11 3
b11 =
b11 7"
b10 %
b10 )
#70
1`
1a
10
0-
1x
1e
b1111 ;
b111 ?"
b111111 "
b111111 (
b111111 2
b111111 .
b111111 D
1o
1y
1f
b1111 <
b111 @"
13"
b111 @
1}
b1100 :
b0 /
b0 8
1q
b1 >"
b1110 ,
b1110 <"
b110 :"
b111z ?
1)"
b110 +
b110 8"
0+"
0/"
10"
15"
1!"
b1110 7
1,"
06"
b1 ;"
b1001 $
b1001 '
b1001 4
b1001 >
b111 #
b111 &
b111 3
b111 =
b111 7"
#80
1^
1Z
1h
1d
1c
1]
b111 B
1_
1n
0o
1i
1-
0[
b1111 ="
b1111 ?"
1p
0`
1e
1b
b1111 >"
1$"
1z
1g
1r
1~
1k
1s
1\
b1111 @"
b11100001 "
b11100001 (
b11100001 2
0%"
1-"
1w
0a
1("
b1111 A
12"
0y
b1111 C
1|
1f
b0 :
b1110 /
b1110 8
1t
b11100001 .
b11100001 D
1j
b0 ,
b0 <"
b0 :"
0x
b11z ?
03"
b101 @
1}
b0 +
b0 8"
1'"
1*"
11"
1{
1+"
1/"
16"
1""
b1111 *
b0 7
b1111 6
1v
1l
b1111 ;"
b1111 $
b1111 '
b1111 4
b1111 >
b1111 #
b1111 &
b1111 3
b1111 =
b1111 7"
#90
0c
0_
0j
0]
0n
0^
0b
0k
1`
1o
b100 B
0Z
0s
b100 C
0|
0[
1a
0p
1x
0e
b0 ="
b101 ,
b101 <"
b1110 ;
0$"
0\
0r
0u
0~
b0 >"
b1 9
b1001 /
b1001 8
b1110 <
1%"
0t
0("
0."
b100 A
02"
1y
1f
b1010 ;"
b101 :"
b1 :
b101z ?
13"
b110 @
1}
b101 +
b101 8"
b1010 *
b101 7
b1010 6
b10010110 .
b10010110 D
0&"
0,"
0v
0+"
0/"
06"
0""
b1010 "
b1010 (
b1010 2
b1010 $
b1010 '
b1010 4
b1010 >
b11 %
b11 )
#100
1c
1_
0`
0h
1b
0g
b10 B
0d
1s
b10 C
0w
0[
1e
00
0\
0f
b1111 9
b0 ;
0z
1u
0y
b1100 ?"
0t
b10 @
0}
0i
0j
b1111 :
b1111 /
b1111 8
b0 <
b100100 .
b100100 D
0%"
b0 A
0-"
1."
b11z ?
03"
b0 ="
b1001 ,
b1001 <"
b1100 @"
b0 "
b0 (
b0 2
b0 >"
b1100 +
b1100 8"
1,"
1v
0!"
0l
b0 *
b1111 7
b0 6
0'"
0*"
00"
05"
b0 ;"
b1100 :"
b11 $
b11 '
b11 4
b11 >
b1100 #
b1100 &
b1100 3
b1100 =
b1100 7"
#110
1[
1c
1_
10
1]
0`
1n
1j
0o
1a
1g
1h
1z
1x
b111 C
1w
1e
b110 B
1d
1p
b1111 ?"
1r
1-"
0u
b1111 ;
1$"
b1111 @"
b111 A
1("
0."
1y
1f
b0 9
b110 /
b110 8
b1111 <
b111 ="
b1000 ,
b1000 <"
b1000 :"
b101z ?
13"
b110 @
1}
b0 :
b111 "
b111 (
b111 2
b111 >"
b1000 +
b1000 8"
1+"
1/"
16"
1""
b111 *
b1000 7
b111 6
b1101001 .
b1101001 D
1&"
1'"
1*"
b111 ;"
b111 $
b111 '
b111 4
b111 >
b1111 #
b1111 &
b1111 3
b1111 =
b1111 7"
#130
